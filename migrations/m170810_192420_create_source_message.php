<?php

use yii\db\Migration;

/**
 * Class m170810_192420_create_source_message
 */
class m170810_192420_create_source_message extends Migration
{
    public $data = [];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $filePath = Yii::getAlias('@app/migrations/create_source_message.php');
        $filePath2 = Yii::getAlias('@app/migrations/translations.php');

        if(is_file($filePath2)){
            $this->data = require($filePath2);
        } else {
            $this->data = require($filePath);
        }
    }

    public function safeUp()
    {
        foreach ($this->data as $row) {
            $query = new \yii\db\Query();
            $query->from('{{%source_message}}')
                ->select('id')
                ->where([
                    'category' => $row['category'],
                    'message' => $row['message']
                ]);

            $id = $query->scalar($this->db);
            if (!$id) {
                $this->insert('{{%source_message}}', [
                    'category' => $row['category'],
                    'message' => $row['message']
                ]);
                $id = $this->db->lastInsertID;
            }

            foreach ($row['translations'] as $translation) {
                $query = new \yii\db\Query();
                $query->from('{{%message}}')
                    ->select('id')
                    ->where([
                        'id' => $id,
                        'language_id' => $translation['language_id']
                    ]);
                if (!$query->scalar($this->db)) {
                    $this->insert('{{%message}}', [
                        'id' => $id,
                        'language_id' => $translation['language_id'],
                        'translation' => $translation['translation'],
                    ]);
                }
            }
        }
        return true;
    }

    public function safeDown()
    {
        foreach ($this->data as $row) {
            $query = new \yii\db\Query();
            $query->from('{{%source_message}}')
                ->select('id')
                ->where([
                    'category' => $row['category'],
                    'message' => $row['message']
                ]);

            $this->delete('{{%source_message}}', [
                'category' => $row['category'],
                'message' => $row['message']
            ]);
        }
        return true;
    }

}
